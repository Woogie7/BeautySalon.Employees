name: deployment Employees Service

on:
  push:
    branches: 
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4

      - name: Checkout Deployment Repo (BeautySalon.Deployments)
        uses: actions/checkout@v4
        with:
          repository: Woogie7/BeautySalon.Deployments
          token: ${{ secrets.DEPLOY_REPO_PAT }}  
          path: deployments 

      - name: Login to DockerHub
        run: docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/beautysalon.employees.api:${{ github.sha }} .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/beautysalon.employees.api:${{ github.sha }}

      - name: Update image tag in values.yaml
        run: |
          yq eval -i '.image.tag = "${{ github.sha }}"' deployments/k8s/values.yaml  

      - name: Commit and Push Changes to Deployment Repo
        run: |
          cd deployments  
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add k8s/values.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push
          
      - name: Install Argo CD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: Sync Argo CD application
        run: |
          # Подождем несколько секунд для применения изменений в Git
          sleep 10
          
          # Получаем пароль Argo CD
          ARGOCD_PASS=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
          
          # Логинимся в Argo CD
          argocd login argocd-server.argocd.svc.cluster.local --username admin --password $ARGOCD_PASS --insecure
          
          # Синхронизируем приложение
          argocd app sync employee-service
          argocd app wait employee-service --health
  